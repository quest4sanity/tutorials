package q4s.tutorials.mybatis.annot.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class ReleasesExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table RELEASES
	 * @mbg.generated  Tue Jun 23 13:10:31 MSK 2020
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table RELEASES
	 * @mbg.generated  Tue Jun 23 13:10:31 MSK 2020
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table RELEASES
	 * @mbg.generated  Tue Jun 23 13:10:31 MSK 2020
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RELEASES
	 * @mbg.generated  Tue Jun 23 13:10:31 MSK 2020
	 */
	public ReleasesExample() {
		oredCriteria = new ArrayList<>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RELEASES
	 * @mbg.generated  Tue Jun 23 13:10:31 MSK 2020
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RELEASES
	 * @mbg.generated  Tue Jun 23 13:10:31 MSK 2020
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RELEASES
	 * @mbg.generated  Tue Jun 23 13:10:31 MSK 2020
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RELEASES
	 * @mbg.generated  Tue Jun 23 13:10:31 MSK 2020
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RELEASES
	 * @mbg.generated  Tue Jun 23 13:10:31 MSK 2020
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RELEASES
	 * @mbg.generated  Tue Jun 23 13:10:31 MSK 2020
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RELEASES
	 * @mbg.generated  Tue Jun 23 13:10:31 MSK 2020
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RELEASES
	 * @mbg.generated  Tue Jun 23 13:10:31 MSK 2020
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RELEASES
	 * @mbg.generated  Tue Jun 23 13:10:31 MSK 2020
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RELEASES
	 * @mbg.generated  Tue Jun 23 13:10:31 MSK 2020
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table RELEASES
	 * @mbg.generated  Tue Jun 23 13:10:31 MSK 2020
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		protected void addCriterionForJDBCDate(String condition, Date value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value.getTime()), property);
		}

		protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andReleaseIdIsNull() {
			addCriterion("RELEASE_ID is null");
			return (Criteria) this;
		}

		public Criteria andReleaseIdIsNotNull() {
			addCriterion("RELEASE_ID is not null");
			return (Criteria) this;
		}

		public Criteria andReleaseIdEqualTo(Long value) {
			addCriterion("RELEASE_ID =", value, "releaseId");
			return (Criteria) this;
		}

		public Criteria andReleaseIdNotEqualTo(Long value) {
			addCriterion("RELEASE_ID <>", value, "releaseId");
			return (Criteria) this;
		}

		public Criteria andReleaseIdGreaterThan(Long value) {
			addCriterion("RELEASE_ID >", value, "releaseId");
			return (Criteria) this;
		}

		public Criteria andReleaseIdGreaterThanOrEqualTo(Long value) {
			addCriterion("RELEASE_ID >=", value, "releaseId");
			return (Criteria) this;
		}

		public Criteria andReleaseIdLessThan(Long value) {
			addCriterion("RELEASE_ID <", value, "releaseId");
			return (Criteria) this;
		}

		public Criteria andReleaseIdLessThanOrEqualTo(Long value) {
			addCriterion("RELEASE_ID <=", value, "releaseId");
			return (Criteria) this;
		}

		public Criteria andReleaseIdIn(List<Long> values) {
			addCriterion("RELEASE_ID in", values, "releaseId");
			return (Criteria) this;
		}

		public Criteria andReleaseIdNotIn(List<Long> values) {
			addCriterion("RELEASE_ID not in", values, "releaseId");
			return (Criteria) this;
		}

		public Criteria andReleaseIdBetween(Long value1, Long value2) {
			addCriterion("RELEASE_ID between", value1, value2, "releaseId");
			return (Criteria) this;
		}

		public Criteria andReleaseIdNotBetween(Long value1, Long value2) {
			addCriterion("RELEASE_ID not between", value1, value2, "releaseId");
			return (Criteria) this;
		}

		public Criteria andRevIdIsNull() {
			addCriterion("REV_ID is null");
			return (Criteria) this;
		}

		public Criteria andRevIdIsNotNull() {
			addCriterion("REV_ID is not null");
			return (Criteria) this;
		}

		public Criteria andRevIdEqualTo(Long value) {
			addCriterion("REV_ID =", value, "revId");
			return (Criteria) this;
		}

		public Criteria andRevIdNotEqualTo(Long value) {
			addCriterion("REV_ID <>", value, "revId");
			return (Criteria) this;
		}

		public Criteria andRevIdGreaterThan(Long value) {
			addCriterion("REV_ID >", value, "revId");
			return (Criteria) this;
		}

		public Criteria andRevIdGreaterThanOrEqualTo(Long value) {
			addCriterion("REV_ID >=", value, "revId");
			return (Criteria) this;
		}

		public Criteria andRevIdLessThan(Long value) {
			addCriterion("REV_ID <", value, "revId");
			return (Criteria) this;
		}

		public Criteria andRevIdLessThanOrEqualTo(Long value) {
			addCriterion("REV_ID <=", value, "revId");
			return (Criteria) this;
		}

		public Criteria andRevIdIn(List<Long> values) {
			addCriterion("REV_ID in", values, "revId");
			return (Criteria) this;
		}

		public Criteria andRevIdNotIn(List<Long> values) {
			addCriterion("REV_ID not in", values, "revId");
			return (Criteria) this;
		}

		public Criteria andRevIdBetween(Long value1, Long value2) {
			addCriterion("REV_ID between", value1, value2, "revId");
			return (Criteria) this;
		}

		public Criteria andRevIdNotBetween(Long value1, Long value2) {
			addCriterion("REV_ID not between", value1, value2, "revId");
			return (Criteria) this;
		}

		public Criteria andReleaseVerIsNull() {
			addCriterion("RELEASE_VER is null");
			return (Criteria) this;
		}

		public Criteria andReleaseVerIsNotNull() {
			addCriterion("RELEASE_VER is not null");
			return (Criteria) this;
		}

		public Criteria andReleaseVerEqualTo(Integer value) {
			addCriterion("RELEASE_VER =", value, "releaseVer");
			return (Criteria) this;
		}

		public Criteria andReleaseVerNotEqualTo(Integer value) {
			addCriterion("RELEASE_VER <>", value, "releaseVer");
			return (Criteria) this;
		}

		public Criteria andReleaseVerGreaterThan(Integer value) {
			addCriterion("RELEASE_VER >", value, "releaseVer");
			return (Criteria) this;
		}

		public Criteria andReleaseVerGreaterThanOrEqualTo(Integer value) {
			addCriterion("RELEASE_VER >=", value, "releaseVer");
			return (Criteria) this;
		}

		public Criteria andReleaseVerLessThan(Integer value) {
			addCriterion("RELEASE_VER <", value, "releaseVer");
			return (Criteria) this;
		}

		public Criteria andReleaseVerLessThanOrEqualTo(Integer value) {
			addCriterion("RELEASE_VER <=", value, "releaseVer");
			return (Criteria) this;
		}

		public Criteria andReleaseVerIn(List<Integer> values) {
			addCriterion("RELEASE_VER in", values, "releaseVer");
			return (Criteria) this;
		}

		public Criteria andReleaseVerNotIn(List<Integer> values) {
			addCriterion("RELEASE_VER not in", values, "releaseVer");
			return (Criteria) this;
		}

		public Criteria andReleaseVerBetween(Integer value1, Integer value2) {
			addCriterion("RELEASE_VER between", value1, value2, "releaseVer");
			return (Criteria) this;
		}

		public Criteria andReleaseVerNotBetween(Integer value1, Integer value2) {
			addCriterion("RELEASE_VER not between", value1, value2, "releaseVer");
			return (Criteria) this;
		}

		public Criteria andReleaseDateIsNull() {
			addCriterion("RELEASE_DATE is null");
			return (Criteria) this;
		}

		public Criteria andReleaseDateIsNotNull() {
			addCriterion("RELEASE_DATE is not null");
			return (Criteria) this;
		}

		public Criteria andReleaseDateEqualTo(Date value) {
			addCriterionForJDBCDate("RELEASE_DATE =", value, "releaseDate");
			return (Criteria) this;
		}

		public Criteria andReleaseDateNotEqualTo(Date value) {
			addCriterionForJDBCDate("RELEASE_DATE <>", value, "releaseDate");
			return (Criteria) this;
		}

		public Criteria andReleaseDateGreaterThan(Date value) {
			addCriterionForJDBCDate("RELEASE_DATE >", value, "releaseDate");
			return (Criteria) this;
		}

		public Criteria andReleaseDateGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("RELEASE_DATE >=", value, "releaseDate");
			return (Criteria) this;
		}

		public Criteria andReleaseDateLessThan(Date value) {
			addCriterionForJDBCDate("RELEASE_DATE <", value, "releaseDate");
			return (Criteria) this;
		}

		public Criteria andReleaseDateLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("RELEASE_DATE <=", value, "releaseDate");
			return (Criteria) this;
		}

		public Criteria andReleaseDateIn(List<Date> values) {
			addCriterionForJDBCDate("RELEASE_DATE in", values, "releaseDate");
			return (Criteria) this;
		}

		public Criteria andReleaseDateNotIn(List<Date> values) {
			addCriterionForJDBCDate("RELEASE_DATE not in", values, "releaseDate");
			return (Criteria) this;
		}

		public Criteria andReleaseDateBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("RELEASE_DATE between", value1, value2, "releaseDate");
			return (Criteria) this;
		}

		public Criteria andReleaseDateNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("RELEASE_DATE not between", value1, value2, "releaseDate");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table RELEASES
	 * @mbg.generated  Tue Jun 23 13:10:31 MSK 2020
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table RELEASES
     *
     * @mbg.generated do_not_delete_during_merge Fri Jun 19 17:36:56 MSK 2020
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }
}