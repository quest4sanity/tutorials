package q4s.tutorials.mybatis.annot.entity;

import java.util.ArrayList;
import java.util.List;

public class EmployeesExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table EMPLOYEES
	 * @mbg.generated  Tue Jun 23 13:10:31 MSK 2020
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table EMPLOYEES
	 * @mbg.generated  Tue Jun 23 13:10:31 MSK 2020
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table EMPLOYEES
	 * @mbg.generated  Tue Jun 23 13:10:31 MSK 2020
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table EMPLOYEES
	 * @mbg.generated  Tue Jun 23 13:10:31 MSK 2020
	 */
	public EmployeesExample() {
		oredCriteria = new ArrayList<>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table EMPLOYEES
	 * @mbg.generated  Tue Jun 23 13:10:31 MSK 2020
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table EMPLOYEES
	 * @mbg.generated  Tue Jun 23 13:10:31 MSK 2020
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table EMPLOYEES
	 * @mbg.generated  Tue Jun 23 13:10:31 MSK 2020
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table EMPLOYEES
	 * @mbg.generated  Tue Jun 23 13:10:31 MSK 2020
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table EMPLOYEES
	 * @mbg.generated  Tue Jun 23 13:10:31 MSK 2020
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table EMPLOYEES
	 * @mbg.generated  Tue Jun 23 13:10:31 MSK 2020
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table EMPLOYEES
	 * @mbg.generated  Tue Jun 23 13:10:31 MSK 2020
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table EMPLOYEES
	 * @mbg.generated  Tue Jun 23 13:10:31 MSK 2020
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table EMPLOYEES
	 * @mbg.generated  Tue Jun 23 13:10:31 MSK 2020
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table EMPLOYEES
	 * @mbg.generated  Tue Jun 23 13:10:31 MSK 2020
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table EMPLOYEES
	 * @mbg.generated  Tue Jun 23 13:10:31 MSK 2020
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andEmpIdIsNull() {
			addCriterion("EMP_ID is null");
			return (Criteria) this;
		}

		public Criteria andEmpIdIsNotNull() {
			addCriterion("EMP_ID is not null");
			return (Criteria) this;
		}

		public Criteria andEmpIdEqualTo(Long value) {
			addCriterion("EMP_ID =", value, "empId");
			return (Criteria) this;
		}

		public Criteria andEmpIdNotEqualTo(Long value) {
			addCriterion("EMP_ID <>", value, "empId");
			return (Criteria) this;
		}

		public Criteria andEmpIdGreaterThan(Long value) {
			addCriterion("EMP_ID >", value, "empId");
			return (Criteria) this;
		}

		public Criteria andEmpIdGreaterThanOrEqualTo(Long value) {
			addCriterion("EMP_ID >=", value, "empId");
			return (Criteria) this;
		}

		public Criteria andEmpIdLessThan(Long value) {
			addCriterion("EMP_ID <", value, "empId");
			return (Criteria) this;
		}

		public Criteria andEmpIdLessThanOrEqualTo(Long value) {
			addCriterion("EMP_ID <=", value, "empId");
			return (Criteria) this;
		}

		public Criteria andEmpIdIn(List<Long> values) {
			addCriterion("EMP_ID in", values, "empId");
			return (Criteria) this;
		}

		public Criteria andEmpIdNotIn(List<Long> values) {
			addCriterion("EMP_ID not in", values, "empId");
			return (Criteria) this;
		}

		public Criteria andEmpIdBetween(Long value1, Long value2) {
			addCriterion("EMP_ID between", value1, value2, "empId");
			return (Criteria) this;
		}

		public Criteria andEmpIdNotBetween(Long value1, Long value2) {
			addCriterion("EMP_ID not between", value1, value2, "empId");
			return (Criteria) this;
		}

		public Criteria andNicknameIsNull() {
			addCriterion("NICKNAME is null");
			return (Criteria) this;
		}

		public Criteria andNicknameIsNotNull() {
			addCriterion("NICKNAME is not null");
			return (Criteria) this;
		}

		public Criteria andNicknameEqualTo(String value) {
			addCriterion("NICKNAME =", value, "nickname");
			return (Criteria) this;
		}

		public Criteria andNicknameNotEqualTo(String value) {
			addCriterion("NICKNAME <>", value, "nickname");
			return (Criteria) this;
		}

		public Criteria andNicknameGreaterThan(String value) {
			addCriterion("NICKNAME >", value, "nickname");
			return (Criteria) this;
		}

		public Criteria andNicknameGreaterThanOrEqualTo(String value) {
			addCriterion("NICKNAME >=", value, "nickname");
			return (Criteria) this;
		}

		public Criteria andNicknameLessThan(String value) {
			addCriterion("NICKNAME <", value, "nickname");
			return (Criteria) this;
		}

		public Criteria andNicknameLessThanOrEqualTo(String value) {
			addCriterion("NICKNAME <=", value, "nickname");
			return (Criteria) this;
		}

		public Criteria andNicknameLike(String value) {
			addCriterion("NICKNAME like", value, "nickname");
			return (Criteria) this;
		}

		public Criteria andNicknameNotLike(String value) {
			addCriterion("NICKNAME not like", value, "nickname");
			return (Criteria) this;
		}

		public Criteria andNicknameIn(List<String> values) {
			addCriterion("NICKNAME in", values, "nickname");
			return (Criteria) this;
		}

		public Criteria andNicknameNotIn(List<String> values) {
			addCriterion("NICKNAME not in", values, "nickname");
			return (Criteria) this;
		}

		public Criteria andNicknameBetween(String value1, String value2) {
			addCriterion("NICKNAME between", value1, value2, "nickname");
			return (Criteria) this;
		}

		public Criteria andNicknameNotBetween(String value1, String value2) {
			addCriterion("NICKNAME not between", value1, value2, "nickname");
			return (Criteria) this;
		}

		public Criteria andLnameIsNull() {
			addCriterion("LNAME is null");
			return (Criteria) this;
		}

		public Criteria andLnameIsNotNull() {
			addCriterion("LNAME is not null");
			return (Criteria) this;
		}

		public Criteria andLnameEqualTo(String value) {
			addCriterion("LNAME =", value, "lname");
			return (Criteria) this;
		}

		public Criteria andLnameNotEqualTo(String value) {
			addCriterion("LNAME <>", value, "lname");
			return (Criteria) this;
		}

		public Criteria andLnameGreaterThan(String value) {
			addCriterion("LNAME >", value, "lname");
			return (Criteria) this;
		}

		public Criteria andLnameGreaterThanOrEqualTo(String value) {
			addCriterion("LNAME >=", value, "lname");
			return (Criteria) this;
		}

		public Criteria andLnameLessThan(String value) {
			addCriterion("LNAME <", value, "lname");
			return (Criteria) this;
		}

		public Criteria andLnameLessThanOrEqualTo(String value) {
			addCriterion("LNAME <=", value, "lname");
			return (Criteria) this;
		}

		public Criteria andLnameLike(String value) {
			addCriterion("LNAME like", value, "lname");
			return (Criteria) this;
		}

		public Criteria andLnameNotLike(String value) {
			addCriterion("LNAME not like", value, "lname");
			return (Criteria) this;
		}

		public Criteria andLnameIn(List<String> values) {
			addCriterion("LNAME in", values, "lname");
			return (Criteria) this;
		}

		public Criteria andLnameNotIn(List<String> values) {
			addCriterion("LNAME not in", values, "lname");
			return (Criteria) this;
		}

		public Criteria andLnameBetween(String value1, String value2) {
			addCriterion("LNAME between", value1, value2, "lname");
			return (Criteria) this;
		}

		public Criteria andLnameNotBetween(String value1, String value2) {
			addCriterion("LNAME not between", value1, value2, "lname");
			return (Criteria) this;
		}

		public Criteria andFnameIsNull() {
			addCriterion("FNAME is null");
			return (Criteria) this;
		}

		public Criteria andFnameIsNotNull() {
			addCriterion("FNAME is not null");
			return (Criteria) this;
		}

		public Criteria andFnameEqualTo(String value) {
			addCriterion("FNAME =", value, "fname");
			return (Criteria) this;
		}

		public Criteria andFnameNotEqualTo(String value) {
			addCriterion("FNAME <>", value, "fname");
			return (Criteria) this;
		}

		public Criteria andFnameGreaterThan(String value) {
			addCriterion("FNAME >", value, "fname");
			return (Criteria) this;
		}

		public Criteria andFnameGreaterThanOrEqualTo(String value) {
			addCriterion("FNAME >=", value, "fname");
			return (Criteria) this;
		}

		public Criteria andFnameLessThan(String value) {
			addCriterion("FNAME <", value, "fname");
			return (Criteria) this;
		}

		public Criteria andFnameLessThanOrEqualTo(String value) {
			addCriterion("FNAME <=", value, "fname");
			return (Criteria) this;
		}

		public Criteria andFnameLike(String value) {
			addCriterion("FNAME like", value, "fname");
			return (Criteria) this;
		}

		public Criteria andFnameNotLike(String value) {
			addCriterion("FNAME not like", value, "fname");
			return (Criteria) this;
		}

		public Criteria andFnameIn(List<String> values) {
			addCriterion("FNAME in", values, "fname");
			return (Criteria) this;
		}

		public Criteria andFnameNotIn(List<String> values) {
			addCriterion("FNAME not in", values, "fname");
			return (Criteria) this;
		}

		public Criteria andFnameBetween(String value1, String value2) {
			addCriterion("FNAME between", value1, value2, "fname");
			return (Criteria) this;
		}

		public Criteria andFnameNotBetween(String value1, String value2) {
			addCriterion("FNAME not between", value1, value2, "fname");
			return (Criteria) this;
		}

		public Criteria andMnameIsNull() {
			addCriterion("MNAME is null");
			return (Criteria) this;
		}

		public Criteria andMnameIsNotNull() {
			addCriterion("MNAME is not null");
			return (Criteria) this;
		}

		public Criteria andMnameEqualTo(String value) {
			addCriterion("MNAME =", value, "mname");
			return (Criteria) this;
		}

		public Criteria andMnameNotEqualTo(String value) {
			addCriterion("MNAME <>", value, "mname");
			return (Criteria) this;
		}

		public Criteria andMnameGreaterThan(String value) {
			addCriterion("MNAME >", value, "mname");
			return (Criteria) this;
		}

		public Criteria andMnameGreaterThanOrEqualTo(String value) {
			addCriterion("MNAME >=", value, "mname");
			return (Criteria) this;
		}

		public Criteria andMnameLessThan(String value) {
			addCriterion("MNAME <", value, "mname");
			return (Criteria) this;
		}

		public Criteria andMnameLessThanOrEqualTo(String value) {
			addCriterion("MNAME <=", value, "mname");
			return (Criteria) this;
		}

		public Criteria andMnameLike(String value) {
			addCriterion("MNAME like", value, "mname");
			return (Criteria) this;
		}

		public Criteria andMnameNotLike(String value) {
			addCriterion("MNAME not like", value, "mname");
			return (Criteria) this;
		}

		public Criteria andMnameIn(List<String> values) {
			addCriterion("MNAME in", values, "mname");
			return (Criteria) this;
		}

		public Criteria andMnameNotIn(List<String> values) {
			addCriterion("MNAME not in", values, "mname");
			return (Criteria) this;
		}

		public Criteria andMnameBetween(String value1, String value2) {
			addCriterion("MNAME between", value1, value2, "mname");
			return (Criteria) this;
		}

		public Criteria andMnameNotBetween(String value1, String value2) {
			addCriterion("MNAME not between", value1, value2, "mname");
			return (Criteria) this;
		}

		public Criteria andSkillIdIsNull() {
			addCriterion("SKILL_ID is null");
			return (Criteria) this;
		}

		public Criteria andSkillIdIsNotNull() {
			addCriterion("SKILL_ID is not null");
			return (Criteria) this;
		}

		public Criteria andSkillIdEqualTo(Long value) {
			addCriterion("SKILL_ID =", value, "skillId");
			return (Criteria) this;
		}

		public Criteria andSkillIdNotEqualTo(Long value) {
			addCriterion("SKILL_ID <>", value, "skillId");
			return (Criteria) this;
		}

		public Criteria andSkillIdGreaterThan(Long value) {
			addCriterion("SKILL_ID >", value, "skillId");
			return (Criteria) this;
		}

		public Criteria andSkillIdGreaterThanOrEqualTo(Long value) {
			addCriterion("SKILL_ID >=", value, "skillId");
			return (Criteria) this;
		}

		public Criteria andSkillIdLessThan(Long value) {
			addCriterion("SKILL_ID <", value, "skillId");
			return (Criteria) this;
		}

		public Criteria andSkillIdLessThanOrEqualTo(Long value) {
			addCriterion("SKILL_ID <=", value, "skillId");
			return (Criteria) this;
		}

		public Criteria andSkillIdIn(List<Long> values) {
			addCriterion("SKILL_ID in", values, "skillId");
			return (Criteria) this;
		}

		public Criteria andSkillIdNotIn(List<Long> values) {
			addCriterion("SKILL_ID not in", values, "skillId");
			return (Criteria) this;
		}

		public Criteria andSkillIdBetween(Long value1, Long value2) {
			addCriterion("SKILL_ID between", value1, value2, "skillId");
			return (Criteria) this;
		}

		public Criteria andSkillIdNotBetween(Long value1, Long value2) {
			addCriterion("SKILL_ID not between", value1, value2, "skillId");
			return (Criteria) this;
		}

		public Criteria andEmailIsNull() {
			addCriterion("EMAIL is null");
			return (Criteria) this;
		}

		public Criteria andEmailIsNotNull() {
			addCriterion("EMAIL is not null");
			return (Criteria) this;
		}

		public Criteria andEmailEqualTo(String value) {
			addCriterion("EMAIL =", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailNotEqualTo(String value) {
			addCriterion("EMAIL <>", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailGreaterThan(String value) {
			addCriterion("EMAIL >", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailGreaterThanOrEqualTo(String value) {
			addCriterion("EMAIL >=", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailLessThan(String value) {
			addCriterion("EMAIL <", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailLessThanOrEqualTo(String value) {
			addCriterion("EMAIL <=", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailLike(String value) {
			addCriterion("EMAIL like", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailNotLike(String value) {
			addCriterion("EMAIL not like", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailIn(List<String> values) {
			addCriterion("EMAIL in", values, "email");
			return (Criteria) this;
		}

		public Criteria andEmailNotIn(List<String> values) {
			addCriterion("EMAIL not in", values, "email");
			return (Criteria) this;
		}

		public Criteria andEmailBetween(String value1, String value2) {
			addCriterion("EMAIL between", value1, value2, "email");
			return (Criteria) this;
		}

		public Criteria andEmailNotBetween(String value1, String value2) {
			addCriterion("EMAIL not between", value1, value2, "email");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table EMPLOYEES
	 * @mbg.generated  Tue Jun 23 13:10:31 MSK 2020
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table EMPLOYEES
     *
     * @mbg.generated do_not_delete_during_merge Fri Jun 19 17:36:56 MSK 2020
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }
}